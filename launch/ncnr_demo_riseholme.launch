<launch>
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>
  <arg name="robot_name" default="thorvald_001"/>
  <arg name="robot_model" default="$(find ncnr_gazebo)/config/robot.yaml"/>
  <arg name="model_extras" default="$(find ncnr_description)/urdf/sensor_modules/ncnr_sensors.xacro"/> 
  <arg name="world_name" default="$(find ncnr_gazebo)/worlds/riseholme_ncnr.world" />
  <arg name="loc_map_yaml"   default="$(find ncnr_gazebo)/maps/riseholme/sim_riseholme_empty.yaml"/>
  <arg name="nav_map_yaml"   default="$(find ncnr_gazebo)/maps/riseholme/sim_riseholme_empty.yaml"/>
  <!-- <arg name="world_name" default="$(find gazebo_radiation_plugins)/custom_models/reactor_room/updated_reactor_room2.world" />
  <arg name="loc_map_yaml"   default="$(find gazebo_radiation_plugins)/maps/reactor_2.yaml"/>
  <arg name="nav_map_yaml"   default="$(find gazebo_radiation_plugins)/maps/reactor_2.yaml"/> -->
  <arg name="map_2_loc_map_pose"   default="0.0 0.0 0.0 0.0 0.0 0.0 1.0"/>
  <arg name="ROBOT_POS_X_1" default="40"/>
  <arg name="ROBOT_POS_Y_1" default="-40"/>
  <arg name="ROBOT_POS_Z_1" default="0"/>
  <arg name="ROBOT_POS_A_1" default="0.0"/>
  <arg name="amcl_cfg"        default="$(find gazebo_radiation_plugins)/configs/amcl_thorvald.yaml"/>
  
  <param name="use_sim_time" value="$(arg use_sim_time)"/>

  <!-- Short-term hack to support the original front_laser:=true argument for spawning
       the simulator. This will be removed in favour of using the config:=x arg instead. -->
  <arg name="front_laser" default="true" />
  <arg name="default_config" value="front_laser" if="$(arg front_laser)" />
  <arg name="default_config" value="base" unless="$(arg front_laser)" /> 
  <!-- end of hack -->

  <!--Load params -->
  <rosparam file="$(find gazebo_radiation_plugins)/custom_models/reactor_room/configs/attentuation.yaml" command="load"  />
  <rosparam file="$(find gazebo_radiation_plugins)/custom_models/reactor_room/configs/sensors.yaml" command="load"  />
  <rosparam file="$(find gazebo_radiation_plugins)/custom_models/reactor_room/configs/radiation.yaml" command="load"  />

  <!-- .................................. Robot ......................................... -->
  <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="verbose" value="$(arg verbose)"/>
    <arg name="world_name" value="$(arg world_name)"/>
  </include> -->

  
    <node name="gazebo" pkg="gazebo_radiation_plugins" type="gazebo"  output="screen"
    args="--verbose $(arg world_name)" />
  
  
    <include file="$(find ncnr_gazebo)/launch/thorvald.launch" >
      <!-- <arg name="tf_prefix" value="dt"/> -->
      <arg name="robot_name" value="$(arg robot_name)" />
      <arg name="x" value="$(arg ROBOT_POS_X_1)" />
      <arg name="y" value="$(arg ROBOT_POS_Y_1)" />
      <arg name="z" value="$(arg ROBOT_POS_Z_1)" />
      <arg name="robot_model" value="$(arg robot_model)"/>
      <arg name="model_extras" value="$(arg model_extras)"/>
    </include>
  
    <!-- Attach sensor to robot -->
    <node pkg="tf" type="static_transform_publisher" name="sim_sensor_to_robot" args="0 0 0 0 0 0 $(arg robot_name)/base_link sim_sensor 100"/>

    <!-- .......................... Radiation Mapping ............................ -->
    <include file="$(find gazebo_radiation_plugins)/launch/radmap.launch" >
      <arg name="costmap_yaml" value="$(find gazebo_radiation_plugins)/launch/params/radmap_params_thorvald.yaml"/>
    </include>
    
  <group ns="dt">
  <!-- .......................... Localization ........................... -->
    <node name="loc_map_server" pkg="map_server" type="map_server" args="$(arg loc_map_yaml)"  output="screen">
      <remap from="map" to ="/dt/loc_map"/>
      <param name="frame_id" value="loc_map"/>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="world_2_loc_map_tfb"
      args="$(arg map_2_loc_map_pose) world loc_map 1000"/> 

    <!-- <include file="$(find gazebo_radiation_plugins)/launch/amcl_thorvald.launch">
        <arg name="amcl_cfg"         value="$(arg amcl_cfg)"/>
    </include> -->

    <node pkg="fake_localization" type="fake_localization" respawn="false" name="fake_loc">
      <remap from="base_pose_ground_truth" to="/thorvald_001/odometry/gazebo" />
      <param name="~odom_frame_id" type="string" value="thorvald_001/odom"/>
      <param name="~base_frame_id" type="string" value="thorvald_001/base_link"/>
      <param name="~global_frame_id" type="string" value="world"/>
    </node>

    <!-- ............................ Navigation ........................... -->
    <node name="nav_map_server" pkg="map_server" type="map_server" args="$(arg nav_map_yaml)"  output="screen">
      <remap from="map" to ="/dt/map"/>
      <param name="frame_id" value="world"/>
    </node>

    <!-- <node pkg="tf" type="static_transform_publisher" name="map_2_loc_map_tfb"
        args="$(arg map_2_loc_map_pose) map loc_map 1000"/>  -->

    <!-- Run Move Base -->
    <include file="$(find ncnr_navigation)/launch/move_base_dwa.launch" >
      <arg name="costmap_common_params" default="$(find ncnr_navigation)/config/costmap_common_params_dt.yaml"/>
      <arg name="vel_topic" default="/thorvald_001/nav_vel"/>
      <arg name="odom_topic" default="/thorvald_001/odometry/gazebo"/>
    </include>
    <!-- ............................ TopoNavigation ........................... -->
    <!-- publish \robot_pose for topological navigation utils -->
    <!-- <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" output="screen"/> -->

    <!-- <include file="$(find mongodb_store)/launch/mongodb_store.launch">
      <arg name="db_path" value="/home/pulver/mongodb"/>
    </include>

    <include file="$(find topological_navigation)/launch/topological_navigation.launch">
      <arg name="map" value="reactor_new"/>
      <arg name="move_base_reconf_service" default="TrajectoryPlannerROS" />
      <arg name="move_base_planner" default="move_base/TrajectoryPlannerROS" />
    </include> -->
      
    <!-- ............................... RVIZ .................................... -->
    <arg name="rviz_config_file" default="$(find ncnr_navigation)/rviz/ncnr_demo_riseholme.rviz"/>
    <node name="rviz" pkg="rviz" type= "rviz" args="-d $(arg rviz_config_file)" />
  </group>
</launch>
